package com.powernode.crm.workbench.mapper;

import com.powernode.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Feb 08 23:25:28 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Feb 08 23:25:28 CST 2023
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Feb 08 23:25:28 CST 2023
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Feb 08 23:25:28 CST 2023
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Feb 08 23:25:28 CST 2023
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Wed Feb 08 23:25:28 CST 2023
     */
    int updateByPrimaryKey(Activity record);


    /**
     * 插入活动表
     * @param activity
     * @return
     */
    int insertActivity(Activity activity);

    /**
     * 根据条件分页查询所有市场活动信息
     * @param map
     * @return
     */
    List<Activity> selectActivityConditionForPage(Map<String,Object> map);

    /**
     * 根据条件查询记录数
     * @return
     */
    int selectActivityCount(Map<String,Object> map);

    /**
     * 删除
     * @param ids
     * @return
     */
    int deleteActivityByIds(String[] ids);


    /**
     * 根据id查询记录
     * @param id
     * @return
     */
    Activity selectActivityById(String id);

    /**
     * 修改市场活动
     * @param activity
     * @return
     */
    int updateActivity(Activity activity);

    /**
     * 查询所有市场活动
     * @return
     */
    List<Activity> selectAllActivity();

    List<Activity> selectActivityByIds(String[] id);

    int insertActivityByList(List<Activity> activityList);

    /**
     * 根据id查询市场活动明细
     * @param id
     * @return
     */
    Activity selectActivityForDetailById(String id);
}